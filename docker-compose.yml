version: '3.8'

services:
  # ============================================
  # POSTGRES - Основная база данных
  # ============================================
  postgres:
    image: postgres:16
    container_name: autopilot_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # REDIS - Кэширование
  # ============================================
  redis:
    image: redis:alpine
    container_name: autopilot_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ============================================
  # QDRANT - Векторная база данных
  # ============================================
  qdrant:
    image: qdrant/qdrant:latest
    container_name: autopilot_qdrant
    ports:
      - "${QDRANT_PORT}:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

  # ============================================
  # N8N - Автоматизация и workflow
  # ============================================
  n8n:
    image: n8nio/n8n:latest
    container_name: autopilot_n8n
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: ${SYSTEM_PASSWORD}
      GENERIC_TIMEZONE: Asia/Tashkent
    ports:
      - "${N8N_PORT}:5678"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped

  # ============================================
  # LANGFUSE - Мониторинг LLM вызовов
  # ============================================
  #langfuse:
  # image: langfuse/langfuse:latest
  # container_name: autopilot_langfuse
  #environment:
  # DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #NEXTAUTH_SECRET: ${SYSTEM_PASSWORD}
  #    SALT: ${SYSTEM_PASSWORD}
  #    NEXTAUTH_URL: http://localhost:${LANGFUSE_PORT}
  #   TELEMETRY_ENABLED: "false"
  #  ports:
  #    - "${LANGFUSE_PORT}:3000"
  #  depends_on:
  #    postgres:
  #      condition: service_healthy
  #  restart: unless-stopped

  # ============================================
  # MINIO - S3-совместимое хранилище
  # ============================================
  minio:
    image: minio/minio:latest
    container_name: autopilot_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  pgdata:
  redis_data:
  qdrant_data:
  n8n_data:
  minio_data: